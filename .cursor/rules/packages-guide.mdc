---
description: package 开发概览
globs: ['packages/**/*']
alwaysApply: false
---
# 🏗️ Fukict 包开发指南

## 📦 包结构 & 构建
- `@fukict/core` - 渲染引擎 < 10KB
- `@fukict/babel-plugin` - JSX 编译优化
- `@fukict/widget` - 组件范式  
- `@fukict/babel-preset-widget` - 零配置

## 🚀 构建命令
```bash
# 快速构建
./scripts/build-package.sh --all --no-watch        # 构建所有包
./scripts/build-package.sh --pkg-name core --watch # 监听单包

# 交互模式
./scripts/build-package.sh                         # 选择包和模式
```

## 🏗️ 包目录结构

packages/{name}/
├── src/index.ts # 主导出
├── tests/.test.ts # 测试用例
├── package.json # 包配置
├── tsup.config.ts # 构建配置 (可选)
└── vitest.config.ts # 测试配置

## 🎯 核心包特性

### Core (/packages/core)
- **文件**: renderer.ts, jsx-runtime.ts, dom-utils.ts
- **功能**: VNode → DOM 转换, 精确差异对比
- **输出**: ESM 多入口 (renderer, jsx-runtime 等)

### Babel Plugin (/packages/babel-plugin)  
- **文件**: plugin.ts, utils.ts
- **功能**: JSX → VNode 编译时转换
- **输出**: ESM + CJS 双格式

### Widget (/packages/widget)
- **文件**: class-widget.ts, functional-widget.ts
- **功能**: 组件生命周期, 状态管理
- **输出**: ESM 多入口

## 🔧 开发工作流
1. **tsdown**: 统一构建工具，支持 watch 模式
2. **环境**: watch=development, build=production  
3. **测试**: `vitest` jsdom 环境
4. **验证**: 自动包名验证 (core|widget|babel-plugin|babel-preset-widget)

## ⚡ 性能要求
- Bundle < 10KB, 编译时优化
- 精确 DOM 操作, 自动清理
- Tree Shaking 支持
- 100% TypeScript 覆盖