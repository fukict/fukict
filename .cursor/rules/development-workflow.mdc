---
description: 
globs: 
alwaysApply: false
---
# 开发工作流指南

## 环境设置
- **Node.js**: >= 16.0.0 (在 [package.json](mdc:package.json) 中定义)
- **包管理器**: pnpm >= 7.0.0 (monorepo 必需)
- **TypeScript**: 版本 5.0+ 用于现代语言特性

## Monorepo 结构
该项目使用 **pnpm workspaces** 进行 monorepo 管理：
- [pnpm-workspace.yaml](mdc:pnpm-workspace.yaml) - 工作区配置
- 包位于 `packages/*`
- 演示位于 `demos/*`

## 常用命令
```bash
# 安装所有依赖项
pnpm install

# 构建所有包
pnpm run build

# 为所有包运行开发模式
pnpm run dev

# 为所有包运行测试
pnpm test

# 清理所有构建产物
pnpm run clean
```

## 包特定开发
```bash
# 处理核心包
cd packages/core
pnpm run dev
pnpm test

# 处理 babel 插件
cd packages/babel-plugin
pnpm run dev
pnpm test
```

## 代码质量标准
- **TypeScript**: 所有代码必须完全类型化
- **性能**: 每个更改都应考虑性能影响
- **包大小**: 保持核心包 < 10KB gzipped
- **测试**: 为所有新功能编写测试
- **文档**: 为重要更改更新 README 文件

## 构建配置
- **构建工具**: tsup 用于快速 TypeScript 编译
- **目标**: ES2020+ 用于现代浏览器支持
- **输出**: ESM 和 CJS 格式
- **类型**: 为 TypeScript 消费者生成 .d.ts 文件

## 测试策略
- **单元测试**: 所有包使用 Vitest
- **集成测试**: 跨包功能测试
- **性能测试**: 关键路径基准测试
- **浏览器测试**: DOM 操作使用 jsdom

## 性能考虑
- **包分析**: 监控包大小
- **运行时性能**: 测量 DOM 操作效率
- **内存使用**: 跟踪内存泄漏和清理
- **基准测试**: 与其他库进行比较

## 发布流程
1. 更新 package.json 文件中的版本号
2. 更新 CHANGELOG.md 文件
3. 运行完整测试套件
4. 构建并验证所有包
5. 性能基准测试
6. 发布到 pnpm

